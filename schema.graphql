type Contact {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  note: String
  phoneNumber: String!
  user: User!
}

"""
Autogenerated input type of CreateContact
"""
input CreateContactInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  firstName: String!
  lastName: String!
  note: String
  phoneNumber: String!
  userId: Int!
}

"""
Autogenerated input type of CreateEvent
"""
input CreateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  endTime: ISO8601DateTime!
  name: String!
  startTime: ISO8601DateTime!
  tourId: Int!
  venueId: Int!
}

"""
Autogenerated input type of CreateOrganization
"""
input CreateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  userId: Int!
}

"""
Autogenerated input type of CreateSubEvent
"""
input CreateSubEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String!
  endTime: ISO8601DateTime!
  eventId: Int!
  name: String!
  startTime: ISO8601DateTime!
}

"""
Autogenerated input type of CreateTour
"""
input CreateTourInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  endDate: ISO8601Date!
  name: String!
  organizationId: Int!
  startDate: ISO8601Date!
}

"""
Autogenerated input type of CreateVenue
"""
input CreateVenueInput {
  address: String!
  capacity: Int
  city: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  state: String!
  zip: String!
}

"""
Autogenerated input type of DestroyContact
"""
input DestroyContactInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DestroyEvent
"""
input DestroyEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DestroyOrganization
"""
input DestroyOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DestroySubEvent
"""
input DestroySubEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DestroyTour
"""
input DestroyTourInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated input type of DestroyVenue
"""
input DestroyVenueInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

type Event {
  endTime: ISO8601DateTime!
  id: ID!
  name: String!
  startTime: ISO8601DateTime!
  subEvents: [SubEvent!]!
  tour: Tour!
  venue: Venue!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  """
  Create a contact belonging to a user
  """
  createContact(
    """
    Parameters for CreateContact
    """
    input: CreateContactInput!
  ): Contact

  """
  Create an event belonging to a tour
  """
  createEvent(
    """
    Parameters for CreateEvent
    """
    input: CreateEventInput!
  ): Event

  """
  Create an organization belonging to a user
  """
  createOrganization(
    """
    Parameters for CreateOrganization
    """
    input: CreateOrganizationInput!
  ): Organization

  """
  Create a sub event belonging to an event
  """
  createSubEvent(
    """
    Parameters for CreateSubEvent
    """
    input: CreateSubEventInput!
  ): SubEvent

  """
  Create a tour belonging to an organization
  """
  createTour(
    """
    Parameters for CreateTour
    """
    input: CreateTourInput!
  ): Tour

  """
  Create a venue
  """
  createVenue(
    """
    Parameters for CreateVenue
    """
    input: CreateVenueInput!
  ): Venue

  """
  Destroy a contact
  """
  destroyContact(
    """
    Parameters for DestroyContact
    """
    input: DestroyContactInput!
  ): Contact

  """
  Destroy an event
  """
  destroyEvent(
    """
    Parameters for DestroyEvent
    """
    input: DestroyEventInput!
  ): Event

  """
  Destroy an organization
  """
  destroyOrganization(
    """
    Parameters for DestroyOrganization
    """
    input: DestroyOrganizationInput!
  ): Organization

  """
  Destroy a subEvent
  """
  destroySubEvent(
    """
    Parameters for DestroySubEvent
    """
    input: DestroySubEventInput!
  ): SubEvent

  """
  Destroy a tour
  """
  destroyTour(
    """
    Parameters for DestroyTour
    """
    input: DestroyTourInput!
  ): Tour

  """
  Destroy a venue
  """
  destroyVenue(
    """
    Parameters for DestroyVenue
    """
    input: DestroyVenueInput!
  ): Venue

  """
  Update a contact
  """
  updateContact(
    """
    Parameters for UpdateContact
    """
    input: UpdateContactInput!
  ): Contact

  """
  Update an event
  """
  updateEvent(
    """
    Parameters for UpdateEvent
    """
    input: UpdateEventInput!
  ): Event

  """
  Update an organization
  """
  updateOrganization(
    """
    Parameters for UpdateOrganization
    """
    input: UpdateOrganizationInput!
  ): Organization

  """
  Update a subEvent
  """
  updateSubEvent(
    """
    Parameters for UpdateSubEvent
    """
    input: UpdateSubEventInput!
  ): SubEvent

  """
  Update a tour
  """
  updateTour(
    """
    Parameters for UpdateTour
    """
    input: UpdateTourInput!
  ): Tour

  """
  Update a venue
  """
  updateVenue(
    """
    Parameters for UpdateVenue
    """
    input: UpdateVenueInput!
  ): Venue
}

type Organization {
  id: ID!
  name: String!
  tours: [Tour!]!
  user: User!
}

type Query {
  """
  Find a contact by ID
  """
  contact(id: ID!): Contact!

  """
  Find all contacts
  """
  contacts: [Contact!]!

  """
  Find event by ID
  """
  event(id: ID!): Event!

  """
  Find all events
  """
  events: [Event!]!

  """
  Find organization by ID
  """
  organization(id: ID!): Organization!

  """
  Find all organizations
  """
  organizations: [Organization!]!

  """
  Find sub_event by ID
  """
  subEvent(id: ID!): SubEvent!

  """
  Find sub_event by name
  """
  subEventByName(name: String!): [SubEvent!]!

  """
  Find all sub_events
  """
  subEvents: [SubEvent!]!

  """
  Find tour by ID
  """
  tour(id: ID!): Tour!

  """
  Find all tours
  """
  tours: [Tour!]!

  """
  Find user by ID
  """
  user(id: ID!): User!

  """
  Find all users
  """
  users: [User!]!

  """
  Find venue by ID
  """
  venue(id: ID!): Venue!

  """
  Find venue by name
  """
  venueByName(name: String!): [Venue!]!

  """
  Find all venues
  """
  venues: [Venue!]!
}

type SubEvent {
  completed: Boolean!
  description: String!
  endTime: ISO8601DateTime!
  event: Event!
  id: ID!
  name: String!
  startTime: ISO8601DateTime!
}

type Tour {
  endDate: ISO8601Date!
  events: [Event!]!
  id: ID!
  name: String!
  organization: Organization!
  startDate: ISO8601Date!
}

"""
Autogenerated input type of UpdateContact
"""
input UpdateContactInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String
  firstName: String
  id: Int!
  lastName: String
  note: String
  phoneNumber: String
  userId: Int
}

"""
Autogenerated input type of UpdateEvent
"""
input UpdateEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  endTime: ISO8601DateTime
  id: Int!
  name: String
  startTime: ISO8601DateTime
  tourId: Int
  venueId: Int
}

"""
Autogenerated input type of UpdateOrganization
"""
input UpdateOrganizationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
  name: String
  userId: Int
}

"""
Autogenerated input type of UpdateSubEvent
"""
input UpdateSubEventInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  endTime: ISO8601DateTime
  eventId: Int
  id: Int!
  name: String
  startTime: ISO8601DateTime
}

"""
Autogenerated input type of UpdateTour
"""
input UpdateTourInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  endDate: ISO8601Date
  id: Int!
  name: String
  organizationId: Int
  startDate: ISO8601Date
}

"""
Autogenerated input type of UpdateVenue
"""
input UpdateVenueInput {
  address: String
  capacity: Int
  city: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String
  state: String
  zip: String
}

type User {
  contacts: [Contact!]
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  organizations: [Organization!]
  phoneNumber: String!
  role: String!
}

type Venue {
  address: String!
  capacity: Int
  city: String!
  events: [Event!]!
  id: ID!
  name: String!
  state: String!
  zip: String!
}